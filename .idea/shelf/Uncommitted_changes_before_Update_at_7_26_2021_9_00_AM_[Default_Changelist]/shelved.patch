Index: app/src/main/java/com/example/umgcteam3/MainActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.umgcteam3;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AlertDialog;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.app.Activity;\r\nimport android.content.DialogInterface;\r\nimport android.content.Intent;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.provider.MediaStore;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.OnFailureListener;\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.auth.UserProfileChangeRequest;\r\nimport com.google.firebase.firestore.DocumentReference;\r\nimport com.google.firebase.firestore.DocumentSnapshot;\r\nimport com.google.firebase.firestore.EventListener;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.firestore.FirebaseFirestoreException;\r\nimport com.google.firebase.firestore.SetOptions;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.google.firebase.storage.UploadTask;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.HashMap;\r\nimport java.util.Map;\r\n\r\nimport javax.annotation.Nullable;\r\n\r\npublic class MainActivity extends AppCompatActivity {\r\n    private static final int GALLERY_INTENT_CODE = 1023 ;\r\n    TextView fullName,email,phone;\r\n    FirebaseAuth fAuth;\r\n    FirebaseFirestore fStore;\r\n    public String userId;\r\n    Button resendCode, resetPassLocal, changeProfile, changProfileImage;\r\n    FirebaseUser user;\r\n    ImageView profileImage;\r\n    StorageReference storageReference;\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n//        phone = findViewById(R.id.profilePhone);\r\n        fullName = findViewById(R.id.fullName);\r\n//        email    = findViewById(R.id.profileEmail);\r\n        resetPassLocal = findViewById(R.id.resetPasswordLocal);\r\n//\r\n        profileImage = findViewById(R.id.profileImage);\r\n        changeProfile = findViewById(R.id.changeProfile);\r\n        changProfileImage = findViewById(R.id.changeImageButton);\r\n        changProfileImage.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent openGalleryIntent = new Intent(Intent.ACTION_PICK, MediaStore.Images.Media.EXTERNAL_CONTENT_URI);\r\n                startActivityForResult(openGalleryIntent,1000);\r\n            }\r\n        });\r\n\r\n        fAuth = FirebaseAuth.getInstance();\r\n        fStore = FirebaseFirestore.getInstance();\r\n        try {\r\n            storageReference = FirebaseStorage.getInstance().getReference();\r\n        } catch (Exception e) {\r\n            System.out.println(\"No storage for this user.\");\r\n        }\r\n\r\n        try {\r\n            StorageReference profileRef = storageReference.child(\"users/\"+fAuth.getCurrentUser().getUid()+\"/profile.jpg\");\r\n            profileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                @Override\r\n                public void onSuccess(Uri uri) {\r\n                    Picasso.get().load(uri).into(profileImage);\r\n                }\r\n            });\r\n        }catch (Exception e){\r\n            Log.d(\"TrytoGetProfilePic: \", \"\\n\\n\\nCould not get Profile pic\\n\\n\\n\");\r\n        }\r\n\r\n//        resendCode = findViewById(R.id.resendCode);\r\n//        verifyMsg = findViewById(R.id.verifyMsg);\r\n\r\n        try{\r\n            userId = fAuth.getCurrentUser().getUid();\r\n            user = fAuth.getCurrentUser();\r\n            checkUserInfo();\r\n        } catch (Exception e){\r\n            Log.d(\"TrytoGetUser: \", e.getMessage());\r\n            finish();\r\n        }\r\n\r\n        try {\r\n            fullName.setText(user.getDisplayName());\r\n            System.out.println(user.getDisplayName());\r\n        } catch (Exception e) {\r\n            Log.d(\"TrytoDisplayName: \", e.getMessage());\r\n            finish();\r\n        }\r\n\r\n\r\n\r\n        if(!user.isEmailVerified()){\r\n            //resendCode.setVisibility(View.VISIBLE);\r\n\r\n//            resendCode.setOnClickListener(new View.OnClickListener() {\r\n//                @Override\r\n//                public void onClick(final View v) {\r\n//\r\n//                    user.sendEmailVerification().addOnSuccessListener(new OnSuccessListener<Void>() {\r\n//                        @Override\r\n//                        public void onSuccess(Void aVoid) {\r\n//                            Toast.makeText(v.getContext(), \"Verification Email Has been Sent.\", Toast.LENGTH_SHORT).show();\r\n//                        }\r\n//                    }).addOnFailureListener(new OnFailureListener() {\r\n//                        @Override\r\n//                        public void onFailure(@NonNull Exception e) {\r\n//                            Log.d(\"tag\", \"onFailure: Email not sent \" + e.getMessage());\r\n//                        }\r\n//                    });\r\n//                }\r\n//            });\r\n        }\r\n\r\n        resetPassLocal.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                final EditText resetPassword = new EditText(v.getContext());\r\n                final AlertDialog.Builder passwordResetDialog = new AlertDialog.Builder(v.getContext());\r\n                passwordResetDialog.setTitle(\"Reset Password ?\");\r\n                passwordResetDialog.setMessage(\"Enter New Password > 6 Characters long.\");\r\n                passwordResetDialog.setView(resetPassword);\r\n\r\n                passwordResetDialog.setPositiveButton(\"Yes\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // extract the email and send reset link\r\n                        String newPassword = resetPassword.getText().toString();\r\n                        user.updatePassword(newPassword).addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                            @Override\r\n                            public void onSuccess(Void aVoid) {\r\n                                Toast.makeText(MainActivity.this, \"Password Reset Successfully.\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        }).addOnFailureListener(new OnFailureListener() {\r\n                            @Override\r\n                            public void onFailure(@NonNull Exception e) {\r\n                                Toast.makeText(MainActivity.this, \"Password Reset Failed.\", Toast.LENGTH_SHORT).show();\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n\r\n                passwordResetDialog.setNegativeButton(\"No\", new DialogInterface.OnClickListener() {\r\n                    @Override\r\n                    public void onClick(DialogInterface dialog, int which) {\r\n                        // close\r\n                    }\r\n                });\r\n                passwordResetDialog.create().show();\r\n            }\r\n        });\r\n\r\n        changeProfile.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n//                // open gallery\r\n//                Intent i = new Intent(v.getContext(),EditProfile.class);\r\n//                i.putExtra(\"fullName\",fullName.getText().toString());\r\n//                i.putExtra(\"email\",email.getText().toString());\r\n//                i.putExtra(\"phone\",phone.getText().toString());\r\n//                startActivity(i);\r\n            }\r\n        });\r\n    }\r\n\r\n    public void buildInitialWorkouts(){\r\n        InitialWorkoutBuilder workoutBuilder = new InitialWorkoutBuilder();\r\n        workoutBuilder.doInBackground();\r\n        FirebaseFirestore db = FirebaseFirestore.getInstance();\r\n        Map<String, Boolean> workout = new HashMap<>();\r\n        workout.put(\"workoutsBuilt\", true);\r\n        db.collection(\"users\").document(userId).set(workout, SetOptions.merge())\r\n                .addOnSuccessListener(new OnSuccessListener<Void>() {\r\n                    @Override\r\n                    public void onSuccess(Void aVoid) {\r\n                        Log.d(\"SUCCESS\", \"Written to the database\");\r\n                    }\r\n                }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Log.w(\"FAILURE\", e.getMessage() );\r\n            }\r\n        });\r\n    }\r\n\r\n    private void updateDisplayName() {\r\n        try{\r\n            DocumentReference documentReference = fStore.collection(\"users\").document(userId);\r\n            documentReference.addSnapshotListener(this, new EventListener<DocumentSnapshot>() {\r\n                @Override\r\n                public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {\r\n                    if (documentSnapshot != null && documentSnapshot.exists()) {\r\n                        String fullName = documentSnapshot.getString(\"fName\");\r\n                        UserProfileChangeRequest profileUpdates = new UserProfileChangeRequest.Builder()\r\n                                .setDisplayName(fullName)\r\n                                .build();\r\n                        user.updateProfile(profileUpdates)\r\n                                .addOnCompleteListener(new OnCompleteListener<Void>() {\r\n                                    private static final String TAG = \"PROFILE\";\r\n                                    @Override\r\n                                    public void onComplete(@NonNull Task<Void> task) {\r\n                                        if (task.isSuccessful()) {\r\n                                            Log.d(TAG, \"User profile updated.\");\r\n                                        }\r\n                                    }\r\n                                });\r\n                    } else {\r\n                        Log.d(\"tag\", \"onEvent: Document do not exists\");\r\n                    }\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            Log.d(\"MainActivityProfilePic\", e.getMessage());\r\n        }\r\n    }\r\n\r\n    public void checkUserInfo() {\r\n        if(user.getDisplayName()== null){\r\n            updateDisplayName();\r\n        }\r\n        DocumentReference documentReference = fStore.collection(\"users\").document(userId);\r\n        documentReference.addSnapshotListener(this, new EventListener<DocumentSnapshot>() {\r\n            @Override\r\n            public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {\r\n                if (documentSnapshot != null && documentSnapshot.exists()) {\r\n                    try {\r\n                        boolean workoutsBuilt = documentSnapshot.getBoolean(\"workoutsBuilt\");\r\n                        if(!workoutsBuilt){\r\n                            buildInitialWorkouts();\r\n                            System.out.println(\"Building initial workouts\");\r\n                        }\r\n                        else{\r\n                            System.out.println(\"The user has workouts?  \" + workoutsBuilt);\r\n                        }\r\n                    } catch (NullPointerException exception){\r\n                        buildInitialWorkouts();\r\n                    }\r\n\r\n                } else {\r\n                    Log.d(\"tag\", \"onEvent: Document does not exist\");\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    @Override\r\n    protected void onActivityResult(int requestCode, int resultCode, @androidx.annotation.Nullable Intent data) {\r\n        super.onActivityResult(requestCode, resultCode, data);\r\n        if(requestCode == 1000){\r\n            if(resultCode == Activity.RESULT_OK){\r\n                Uri imageUri = data.getData();\r\n                uploadImageToFirebase(imageUri);\r\n            }\r\n        }\r\n    }\r\n\r\n    private void uploadImageToFirebase(Uri imageUri) {\r\n        // uplaod image to firebase storage\r\n        final StorageReference fileRef = storageReference.child(\"users/\"+fAuth.getCurrentUser().getUid()+\"/profile.jpg\");\r\n        fileRef.putFile(imageUri).addOnSuccessListener(new OnSuccessListener<UploadTask.TaskSnapshot>() {\r\n            @Override\r\n            public void onSuccess(UploadTask.TaskSnapshot taskSnapshot) {\r\n                fileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                    @Override\r\n                    public void onSuccess(Uri uri) {\r\n                        Picasso.get().load(uri).into(profileImage);\r\n                    }\r\n                });\r\n            }\r\n        }).addOnFailureListener(new OnFailureListener() {\r\n            @Override\r\n            public void onFailure(@NonNull Exception e) {\r\n                Toast.makeText(getApplicationContext(), \"Failed.\", Toast.LENGTH_SHORT).show();\r\n            }\r\n        });\r\n    }\r\n\r\n    public void logout(View view) {\r\n        FirebaseAuth.getInstance().signOut();//logout\r\n        startActivity(new Intent(getApplicationContext(),LoginActivity.class));\r\n        finish();\r\n    }\r\n\r\n    public void proceedToWorkout(View view) {\r\n        startActivity(new Intent(getApplicationContext(), DashboardActivity.class));\r\n        finish();\r\n    }\r\n\r\n    public void goToStatistics(View view){\r\n        startActivity(new Intent(getApplicationContext(),StatisticsActivity.class));\r\n        finish();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/umgcteam3/MainActivity.java	(revision b6bf3e74e0850943c68b646b0229055fa0cdb9d4)
+++ app/src/main/java/com/example/umgcteam3/MainActivity.java	(date 1626976554339)
@@ -81,14 +81,25 @@
             System.out.println("No storage for this user.");
         }
 
+
         try {
             StorageReference profileRef = storageReference.child("users/"+fAuth.getCurrentUser().getUid()+"/profile.jpg");
+            System.out.println("\n\n\n\n\ntry to get profile pic\n\n\n\n");
+            System.out.println(profileRef.getName());
+            System.out.println("Profile Ref download url" + profileRef.getDownloadUrl());
+            /*
             profileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {
                 @Override
                 public void onSuccess(Uri uri) {
                     Picasso.get().load(uri).into(profileImage);
+                    System.out.println("\n\n\n profile pic success \n\n\n");
                 }
-            });
+            }).addOnFailureListener(new OnFailureListener() {
+                @Override
+                public void onFailure(Exception e) {
+                    System.out.println("\n\n\n\n\n\n Profile Pic Failure \n\n\n\n\n");
+                }
+            });*/
         }catch (Exception e){
             Log.d("TrytoGetProfilePic: ", "\n\n\nCould not get Profile pic\n\n\n");
         }
@@ -100,14 +111,16 @@
             userId = fAuth.getCurrentUser().getUid();
             user = fAuth.getCurrentUser();
             checkUserInfo();
+            System.out.println("try to get user?");
         } catch (Exception e){
             Log.d("TrytoGetUser: ", e.getMessage());
             finish();
         }
 
         try {
+            System.out.println("\n\n\nprint displayname." + user.getDisplayName() + "\n\n");
             fullName.setText(user.getDisplayName());
-            System.out.println(user.getDisplayName());
+            System.out.println("\n\n\nsuccess: " + user.getDisplayName() + "\n\n");
         } catch (Exception e) {
             Log.d("TrytoDisplayName: ", e.getMessage());
             finish();
@@ -240,13 +253,16 @@
     }
 
     public void checkUserInfo() {
-        if(user.getDisplayName()== null){
+        if(user.getDisplayName() == null){
+            System.out.println("\n\nUser name null, update the name.\n\n");
             updateDisplayName();
         }
         DocumentReference documentReference = fStore.collection("users").document(userId);
+        System.out.println("\n\n\nDocument Reference: " + documentReference);
         documentReference.addSnapshotListener(this, new EventListener<DocumentSnapshot>() {
             @Override
             public void onEvent(@Nullable DocumentSnapshot documentSnapshot, @Nullable FirebaseFirestoreException e) {
+                System.out.println("\n\nAttempting to build workouts\n\n");
                 if (documentSnapshot != null && documentSnapshot.exists()) {
                     try {
                         boolean workoutsBuilt = documentSnapshot.getBoolean("workoutsBuilt");
@@ -264,8 +280,10 @@
                 } else {
                     Log.d("tag", "onEvent: Document does not exist");
                 }
+                System.out.println("\n\nFinish building workouts\n\n");
             }
         });
+        System.out.println("\n\n\n after on event document listener\n\n\n");
     }
 
     @Override
@@ -308,11 +326,9 @@
 
     public void proceedToWorkout(View view) {
         startActivity(new Intent(getApplicationContext(), DashboardActivity.class));
-        finish();
     }
 
     public void goToStatistics(View view){
         startActivity(new Intent(getApplicationContext(),StatisticsActivity.class));
-        finish();
     }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/umgcteam3/StatisticsActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.umgcteam3;\r\n\r\nimport android.content.Intent;\r\nimport android.graphics.Color;\r\nimport android.net.Uri;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.ArrayAdapter;\r\nimport android.widget.Button;\r\nimport android.widget.ImageView;\r\nimport android.widget.Spinner;\r\nimport android.widget.TextView;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport com.google.android.gms.tasks.OnSuccessListener;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.firestore.FirebaseFirestore;\r\nimport com.google.firebase.storage.FirebaseStorage;\r\nimport com.google.firebase.storage.StorageReference;\r\nimport com.jjoe64.graphview.GraphView;\r\nimport com.jjoe64.graphview.series.DataPoint;\r\nimport com.jjoe64.graphview.series.LineGraphSeries;\r\nimport com.squareup.picasso.Picasso;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\npublic class StatisticsActivity extends AppCompatActivity {\r\n    GraphView graph;\r\n    LineGraphSeries<DataPoint> series = new LineGraphSeries<>(getDataPoint());\r\n    private Spinner spinner;\r\n    TextView fullName;\r\n    ImageView profileImage;\r\n    StorageReference storageReference;\r\n    FirebaseAuth fAuth;\r\n    FirebaseFirestore fStore;\r\n    public String userId;\r\n    FirebaseUser user;\r\n    List<String> spinnerItems;\r\n    HashMap statisticsData = StatisticsReport.data;\r\n\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.statistics);\r\n        fullName = findViewById(R.id.fullName);\r\n        profileImage = findViewById(R.id.profileImage);\r\n        spinner = findViewById(R.id.exercise_name_spinner);\r\n        graph = findViewById(R.id.graph);\r\n        graph.getGridLabelRenderer().setGridColor(Color.WHITE);\r\n        graph.getGridLabelRenderer().setVerticalLabelsColor(Color.WHITE);\r\n        graph.getGridLabelRenderer().setHorizontalLabelsColor(Color.WHITE);\r\n        fAuth = FirebaseAuth.getInstance();\r\n        fStore = FirebaseFirestore.getInstance();\r\n        spinnerItems = new ArrayList<>();\r\n        List[] barbellData = (List[]) statisticsData.get(\"Barbell_Bench_Press\");\r\n        List datesData = barbellData[0];\r\n        System.out.println(datesData.get(0) + \" is the dates\");\r\n\r\n        try {\r\n            storageReference = FirebaseStorage.getInstance().getReference();\r\n            userId = fAuth.getCurrentUser().getUid();\r\n            user = fAuth.getCurrentUser();\r\n            fullName.setText(user.getDisplayName());\r\n            StorageReference profileRef = storageReference.child(\"users/\"+fAuth.getCurrentUser().getUid()+\"/profile.jpg\");\r\n            profileRef.getDownloadUrl().addOnSuccessListener(new OnSuccessListener<Uri>() {\r\n                @Override\r\n                public void onSuccess(Uri uri) {\r\n                    Picasso.get().load(uri).into(profileImage);\r\n                }\r\n            });\r\n        } catch (Exception e) {\r\n            Log.d(\"StatisticsActivity: \", e.getMessage());\r\n            finish();\r\n        }\r\n\r\n        AbdominalExercises[] abdominalArray = AbdominalExercises.values();\r\n        for (AbdominalExercises item : abdominalArray){\r\n            String exerciseItem = item.toString().replace(\"_\", \" \");\r\n            spinnerItems.add(exerciseItem);\r\n        }\r\n\r\n        LowerBodyExercise[] lowerArray = LowerBodyExercise.values();\r\n        for (LowerBodyExercise item : lowerArray){\r\n            String exerciseItem = item.toString().replace(\"_\", \" \");\r\n            spinnerItems.add(exerciseItem);\r\n        }\r\n\r\n        UpperBodyExercise[] upperArray = UpperBodyExercise.values();\r\n        for (UpperBodyExercise item : upperArray){\r\n            String exerciseItem = item.toString().replace(\"_\", \" \");\r\n            spinnerItems.add(exerciseItem);\r\n        }\r\n\r\n        ArrayAdapter<String> adapter = new ArrayAdapter<String>(this, R.layout.support_simple_spinner_dropdown_item, spinnerItems);\r\n        adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);\r\n        spinner.setAdapter(adapter);\r\n        graph.addSeries(series);\r\n    }\r\n\r\n    private DataPoint[] getDataPoint(){\r\n        DataPoint[] dataPoints = new DataPoint[]{\r\n                //grab data points from database based on selected drop-down\r\n        };\r\n        return dataPoints;\r\n    }\r\n\r\n    public void goToProfile(View view){\r\n        startActivity(new Intent(getApplicationContext(),MainActivity.class));\r\n        finish();\r\n    }\r\n    public void proceedToWorkout(View view) {\r\n        startActivity(new Intent(getApplicationContext(), DashboardActivity.class));\r\n        finish();\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/umgcteam3/StatisticsActivity.java	(revision b6bf3e74e0850943c68b646b0229055fa0cdb9d4)
+++ app/src/main/java/com/example/umgcteam3/StatisticsActivity.java	(date 1626977531949)
@@ -55,9 +55,10 @@
         fAuth = FirebaseAuth.getInstance();
         fStore = FirebaseFirestore.getInstance();
         spinnerItems = new ArrayList<>();
-        List[] barbellData = (List[]) statisticsData.get("Barbell_Bench_Press");
-        List datesData = barbellData[0];
-        System.out.println(datesData.get(0) + " is the dates");
+//        List[] barbellData = (List[]) statisticsData.get("Barbell_Bench_Press");
+//        List datesData = barbellData[0];
+//        System.out.println(datesData.get(0) + " is the dates");
+
 
         try {
             storageReference = FirebaseStorage.getInstance().getReference();
@@ -76,6 +77,7 @@
             finish();
         }
 
+        spinnerItems.add("Select an exercise...");
         AbdominalExercises[] abdominalArray = AbdominalExercises.values();
         for (AbdominalExercises item : abdominalArray){
             String exerciseItem = item.toString().replace("_", " ");
